1. Užduotis
1.1 Sukurkite abstrakčią klasę Shape su šiais abstrakčiais metodais:
plotas(): Turėtų grąžinti figūros plotą.
perimetras(): Turėtų grąžinti figūros perimetrą.
1.2 Sukurkite tris vaikines klases: Apskritimas, Stačiakampis ir Trikampis.
1.3 Implementuokite metodus plotas() ir perimetras() kiekvienoje vaikynėje klasėje.
1.4 Sukurkite kiekvienos klasės objektus ir iškvieskite ploto() ir perimetro() metodus.
	
2. Užduotis
2.1 Sukurkite abstrakčią klasę Employee su šiais abstrakčiais metodais:
calculate_pay(): Turėtų grąžinti darbuotojo darbo užmokestį.
get_role(): Turėtų grąžinti darbuotojo vaidmenį.
2.2 Sukurkite tris vaikines klases: Vadybininkas, Inžinierius ir Stažuotojas.
2.3 Implementuokite metodus calculate_pay() ir get_role() kiekvienoje vaikynėje klasėje.
2.4 Sukurkite objektus ir iškvieskite metodus calculate_pay() ir get_role().

1. Sukurkite stateless klasę StringUtils su statiniais metodais įprastoms eilutės operacijoms atlikti: to_uppercase, to_lowercase ir reverse_string.
2. Sukurkite statefull klasę Skaitiklis, kuri saugoja skaičių. Joje turėtų būti metodai, skirti skaičiui padidinti, sumažinti, atstatyti ir dabartiniam skaičiui gauti.
3. Sukurkite klasę Timer, kuri gali paleisti, sustabdyti ir iš naujo nustatyti laikmatį bei nurodyti praėjusį laiką sekundėmis. Naudokite time python paketą.
4. Sukurkite klasę DateUtils su statiniais metodais, kad apskaičiuotumėte dienų skaičių tarp dviejų datų ir patikrintumėte, ar tam tikri metai yra keliamieji metai. Naudokite python paketą datetime.
5. Sukurkite klasę ShoppingCart, kuriame būtų prekių sąrašas. Joje turėtų būti metodai: pridėti prekes, pašalinti prekes, peržiūrėti krepšelį ir apskaičiuoti bendrą kainą.
6. Sukurkite klasę UserSession, kuri valdo vartotojo prisijungimo būseną. Joje turėtų būti būdai prisijungti, atsijungti, patikrinti, ar vartotojas yra prisijungęs, ir gauti prisijungusio vartotojo duomenis.
7. Sukurkite klasę Order (užsakymas), kuriame būtų saugoma užsakymo informacija (prekės, kiekiai, kainos). Įdiekite prekių pridėjimo, pašalinimo, bendros kainos apskaičiavimo ir nuolaidų taikymo metodus.
8. Sukurkite klasę DataTransformer su statiniais metodais, kad atliktumėte duomenų transformavimo operacijas: skaičių sąrašo normalizavimą, eilučių kodavimą/dekodavimą ir duomenų filtravimą pagal kriterijus.
9. Sukurkite klasę „ReservationSystem“, kuri tvarko paslaugos (pvz., viešbučio kambarių, restorano stalų) rezervacijas. Įdiekite rezervacijų kūrimo, rezervacijų atšaukimo, prieinamumo tikrinimo ir visų rezervacijų peržiūros metodus.
10. Sukurkite klasę FileUtils su statiniais metodais failo operacijoms atlikti: skaityti failą, rašyti į failą ir pridėti duomenų prie failo.

1. 
1.1 Įdiekite paketą matplotlib.
1.2 Sukurkite klasę pavadinimu DataVisualizer.
1.3 Panaudokite metodą plot_data(x, y).
1.4 Įdiekite metodą save_plot(failo pavadinimas), kad išsaugotumėte brėžinį faile.

2. 
2.1 Įdiekite „zipfile“ paketą (yra „Python“).
2.2 Sukurkite klasę pavadinimu FileCompressor.
2.3 Implementuokite metodą compress(files, output_zip), kad suspaustumėte failų sąrašą į ZIP failą.
2.4 Implementuokite metodą decompress(zip_file, output_dir), kad ištrauktumėte ZIP failo turinį.

3.
3.1 Įdiekite pandas paketą.
3.2 Sukurkite klasę pavadinimu DataFrameHandler.
3.3 Implementuokite metodą load_dataframe(file_path), kad įkeltumėte CSV failą į pandas DataFrame.
3.4 Implementuokite metodus filter_data(condition) ir group_data(column), kad filtruotumėte ir sugrupuotumėte DataFrame.

4.
4.1 Įdiekite pickle pakeltą.
4.2 Sukurkite klasę pavadinimu DataSerializer.
4.3 Implementuokite metodus, kurie išsaugotų python objektą į .pkl formatą ir nuskaitytų iš jo.

5.
5.1 Įdiekite numpy paketą.
5.2 Sukurkite klasę pavadinimu DataTransformer.
5.3 Implementuokite metodus matematinėms operacijoms, transformacijoms ir pertvarkymui su NumPy.
5.4 Transformuokite pavyzdinį duomenų rinkinį naudodami implementuotus metodus.


Interpreter add Virtual Environment

# python -m venv myenv
# pip install <name_of_the_package>

from dataclasses import dataclass, field


@dataclass
class Person:
    name: str
    age: int
    address: str = field(default="Unknown Address")


person1 = Person(name="Alice", age=30)
print(person1)
